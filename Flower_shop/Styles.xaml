<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Flower_shop">
    
    <!-- Стили кнопок -->
    <Style x:Key="ModernButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFB6C1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                CornerRadius="20"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF8C4B77"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" 
                                                    ShadowDepth="0" 
                                                    Color="#FFB6C1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF6B3957"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль текстовых полей -->
    <Style x:Key="ModernTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#FFF5F5F5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            BorderThickness="1"
                            BorderBrush="#FFB6C1">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF8C4B77"/>
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" 
                                                    ShadowDepth="0" 
                                                    Color="#FFB6C1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль выпадающих списков -->
    <Style x:Key="ModernComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="#FFF5F5F5"/>
        <Setter Property="BorderBrush" Value="#FFB6C1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Background="{TemplateBinding Background}"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Path x:Name="Arrow" 
                                          Fill="#FF8C4B77"
                                          Data="M0,0 L8,8 L16,0"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Margin="0,0,10,0"/>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentSite"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="10,3,30,3"
                                                VerticalAlignment="Center"/>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" 
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                Background="White"
                                                BorderBrush="#FFB6C1"
                                                BorderThickness="1"
                                                CornerRadius="0,0,10,10">
                                            <ScrollViewer Margin="0,4,0,4" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF8C4B77"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="8" CenterY="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль пунктирной границы -->
    <Style x:Key="DashedBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#FFB6C1"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#FF8C4B77"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <VisualBrush x:Key="DashedBorderBrush" TileMode="Tile" 
                         Viewport="0,0,8,8" ViewportUnits="Absolute" 
                         Viewbox="0,0,8,8" ViewboxUnits="Absolute">
                <VisualBrush.Visual>
                    <Path Data="M 0 0 L 4 0" 
                          Stroke="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=Border}}" 
                          StrokeThickness="2"/>
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Border}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.BorderBrush>
                            <StaticResource ResourceKey="DashedBorderBrush"/>
                        </Border.BorderBrush>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary> 